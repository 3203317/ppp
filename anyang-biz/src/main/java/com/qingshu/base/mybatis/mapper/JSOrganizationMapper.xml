<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="JSOrganization">
	<!-- Result Map -->
	<resultMap id="BaseResultMap" type="JSOrganization">
		<result column="id" property="id" />
		<result property="organizationManager" column="organizationmanager" />
		<result property="organizationSort" column="organizationSort" />
		<result property="orgType" column="org_type" />
		<association property="organizationPid" column="organizationPid" javaType="JSOrganization" select="JSOrganization.findById"/>
		<association property="jsArea" column="areaId" javaType="JSArea" select="JSArea.findById" />
		<collection property="childOrganizations" column="id" select="findChildren" ofType="JSOrganization" /> 
	</resultMap>
	
	<!-- 数据表字段列 -->
	<sql id="Base_Column_List">
		jo.id,
		jo.organizationCode,
		jo.organizationName,
		jo.organizationPid,
		jo.organizationLevel,
		jo.organizationmanager,
		jo.organizationSort,
		jo.org_type
	</sql>
	
	 <!-- 实体对象中属性值 -->
   <sql id="entity_properties">
      #{id, jdbcType=VARCHAR},
      #{organizationCode, jdbcType=VARCHAR},
      #{organizationName, jdbcType=VARCHAR},
      #{organizationPid.id, jdbcType=VARCHAR},
      #{organizationLevel, jdbcType=DOUBLE},
      #{organizationManager, jdbcType=VARCHAR},
      #{organizationSort, jdbcType=VARCHAR},
      #{orgType,jdbcType=VARCHAR}
   </sql>
	<!-- 数据表名 -->
	<sql id="tablename"> j_s_organization </sql>
	<sql id="tableasname"> j_s_organization jo</sql>
	
	<!-- where 条件 -->
	<sql id="where"> where 1=1 </sql>
	
	<!-- columnKey 主键 列名称 ,视图获取不到主键 需要设置 -->
	<sql id="columnKey"> and jo.id=#{id} </sql>
	
	<sql id="andOther">
		<trim suffixOverrides=",">
			<if test="id != null"> and jo.id = #{id} </if>
			<if test="organizationCode != null"> and jo.organizationCode = #{organizationCode} </if>
			<if test="organizationName != null"> and jo.organizationName = #{organizationName} </if>
			<if test="organizationPid != null">  and jo.organizationPid = #{organizationPid} </if>
			<if test="organizationLevel !=null"> and jo.organizationLevel = #{organizationLevel}</if>
		</trim>
	</sql>
	
	<sql id="page_where">
		<trim prefix="where" prefixOverrides="and | or ">
			 <if test="queryParams.organizationName !=null">and jo.organizationName = #{queryParams.organizationName}</if>
			 <if test="queryParams.organizationPid !=null">and jo.organizationPid = #{queryParams.organizationPid}</if>
			 <if test="queryParams.organizationLevel !=null">and jo.organizationLevel = #{queryParams.organizationLevel}</if>
		</trim>
	</sql>
	
	<!-- 保存对象 -->
	<insert id="save" parameterType="JSOrganization">
		insert into
		<include refid="tableasname" />
		(<include refid="Base_Column_List" />)
		values(<include refid="entity_properties" />)
	</insert>
	<!-- 更新对象 -->
	<update id="update" parameterType="JSOrganization">
		update <include refid="tablename"/> 
		<trim prefix="set" suffixOverrides=",">
			<if test="organizationName != null">organizationName = #{organizationName},</if>
			<if test="organizationCode != null">organizationCode = #{organizationCode},</if>
			<if test="orgType != null">org_type = #{orgType},</if>
			<if test="organizationPid != null">organizationPid = #{organizationPid.id},</if>
			<if test="organizationSort != null">organizationSort = #{organizationSort},</if>
		</trim>
		<where>id = #{id}</where>
	</update>
	<!-- 批量分配用户给机构 -->
	<insert id="batchAllotUser" parameterType="list">
		insert into
		j_s_organization_user(organizationid,userid)
		<foreach collection="list" item="item" index="index"
			separator="union all">
			select #{item.organizationId},#{item.userId} from dual
		</foreach>
	</insert>
	
	<!--查找某机构下的用户-->
	<select id="findUserByOrgan" resultType="JSUser" parameterType="String" >
		select 
		ju.*,jo.organizationid userName from j_s_user ju
		left join j_s_organization_user jo
		on ju.id=jo.userid
		where jo.organizationid=#{id}
	</select>
	
	<!--查找某机构下的用户-->
	<select id="findUserByOrganAndUserType" resultType="JSUser" parameterType="Map" >
		select 
		ju.id,jo.organizationid userName,ju.nickName,ju.realName from j_s_user ju
		left join j_s_organization_user jo
		on ju.id=jo.userid
		<trim prefix="where" prefixOverrides="and | or ">
			 <if test="organId !=null">and jo.organizationid = #{organId}</if>
			 <if test="userType !=null">and ju.userType = #{userType}</if>
		</trim>
	</select>
	
	
	<!--查找用户所在机构-->
	<select id="findOrganByUser" resultMap="BaseResultMap" parameterType="String" >
		select 
		<include refid="Base_Column_List" />
		from 
		<include refid="tableasname"/>
		left join j_s_organization_user jou
		on jo.id=jou.organizationid
		where jou.userid=#{id}
	</select>
		<!--查找对象-->
	<select id="findById" resultMap="BaseResultMap" parameterType="map" >
		select 
		<include refid="Base_Column_List" />
		from 
		<include refid="tableasname"/>
		where jo.id = #{id}
	</select>
		<!--根据全称查找对象-->
	<select id="findByName" resultMap="BaseResultMap" parameterType="map" >
		select 
		<include refid="Base_Column_List" />
		from 
		<include refid="tableasname"/>
		where jo.organizationName = #{name}
	</select>
	<!--查找对象-->
	<select id="findOrganCode" resultMap="BaseResultMap" parameterType="map" >
		select 
		<include refid="Base_Column_List" />
		from 
		<include refid="tableasname"/>
		where jo.organizationCode = #{organizationCode}
	</select>
	<!--根据机构级别查找对象-->
	<select id="findOrganizationByLevel" resultMap="BaseResultMap" parameterType="map" >
		select 
		<include refid="Base_Column_List" />
		from 
		<include refid="tableasname"/>
		where jo.organizationLevel = #{organizationLevel} order by jo.organizationCode
	</select>
	<!--根据机构级别查找对象-->
	<select id="findAllOrganization" resultMap="BaseResultMap" parameterType="map" >
		select 
		<include refid="Base_Column_List" />
		from 
		<include refid="tableasname"/> order by organizationCode
	</select>
	<!--批量删除-->
	<delete id="deleteAll">
		delete from 
		<include refid="tablename" />
		where id in
		<foreach item="item" collection="array" open="(" separator="," close=")">
			#{item}
		</foreach>
	</delete>
	
	<!--批量机构下已分配的用户-->
	<delete id="deleteAllotUser" parameterType="map">
		delete from 
		j_s_organization_user
		where userid in
		<foreach item="item" collection="ids" open="(" separator="," close=")">
			#{item}
		</foreach>
		and organizationid=#{id}
	</delete>
	
	<!--清空用户所属的机构-->
	<delete id="deleteUserOgran" parameterType="String">
		delete from 
		j_s_organization_user
		where userId=#{userId}
	</delete>
	<!-- 查询不在某机构的用户 -->
	<select id="selectNoallotUser" parameterType="PagerInfo" resultType="JSUser">
	select u.id,u.realName  
      from j_s_user u 
      where u.id not in(select jo.userid from j_s_organization_user jo where jo.organizationid=#{queryParams.id}) and u.userLevel=1					
	</select>
	<!-- 生成排序号 -->
	<select id="createCode" resultType="String" parameterType="string">
		SELECT to_number(MAX(jo.organizationCode))+1 from 
        <include refid="tableasname" /> 
         where jo.organizationPid=#{organizationPid}
	</select>
	<!-- 查询子节点 -->
	<select id="findChildren" resultMap="BaseResultMap" parameterType="string">
		select
		<include refid="Base_Column_List" />
		from 
		<include refid="tableasname" /> 
		where organizationPid=#{organizationPid}
	</select>
	<!-- 查询企业:去掉了根节点 -->
	<select id="findEnterprise" resultMap="BaseResultMap" >
		select
		<include refid="Base_Column_List" />
		from 
		<include refid="tableasname" /> 
		where org_type='1' and organizationmanager is null order by organizationSort
	</select>
	<!-- 查询所有门店-->
	<select id="findShop" resultMap="BaseResultMap" >
		select
		<include refid="Base_Column_List" />
		from 
		<include refid="tableasname" /> 
		where org_type='2' order by organizationSort
	</select>
	<!-- 查询,参数查询,Map -->
	<select id="selectByMap" parameterType="Map" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from
		<include refid="tableasname" />
		<include refid="where" />
		<include refid="andOther" />
		 order by jo.organizationCode
	</select>
	
	<!-- 获取对象列表(分页)-->
	<select id="pagerList" parameterType="PagerInfo" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from
		<include refid="tableasname" />
		<include refid="page_where" />
	</select>
	<!--根据父Id查询机构-->
	<select id="findByPid" parameterType="string" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from
		<include refid="tableasname" />
		where organizationPid=#{pid}
	</select>
</mapper>
