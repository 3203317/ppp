<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="JSRole">
	<!-- Result Map -->
	<resultMap id="BaseResultMap" type="JSRole">
	<result column="id" property="id" />
	<association property="rolePid" column="rolePid" javaType="JSRole" select="JSRole.findById"/>
	</resultMap>
	<!-- 数据表字段列 -->
	<sql id="Base_Column_List">
		jr.id,jr.roleName,jr.roleLevel,jr.roleCode,jr.rolePid,jr.isSuper,jr.allowDelete
	</sql>
	<!-- 数据表名 -->
	<sql id="tableasname"> j_s_role jr</sql>
	<sql id="tablename"> j_s_role </sql>
	<!-- where 条件 -->
	<sql id="where"> where 1=1 </sql>
	<!-- columnKey 主键 列名称 ,视图获取不到主键 需要设置 -->
	<sql id="columnKey"> and jr.id=#{id} </sql>
	<sql id="andOther">
		<trim suffixOverrides=",">
			<if test="roleCode != null and roleCode !='' "> and jr.roleCode = #{roleCode} </if>
			<if test="isSuper != null and isSuper !='' "> and jr.isSuper = #{isSuper} </if>
		</trim>
	</sql>
	<sql id="page_where">
		<trim prefix="where" prefixOverrides="and | or ">
			 <if test="queryParams.userName !=null">and jr.userName = #{queryParams.userName}</if>
		</trim>
	</sql>
	<!-- 保存角色 -->
	<insert id="save" parameterType="JSRole">
		insert into
		<include refid="tablename" />
		(id,roleName,roleCode,roleLevel)
		values(#{id},#{roleName},#{roleCode},#{roleLevel})
	</insert>
	<!-- 更新角色 -->
	<update id="update" parameterType="JSRole">
		update 
		<include refid="tablename"/> 
		<trim prefix="set" suffixOverrides=",">
			<if test="roleName != null">roleName = #{roleName},</if>
			<if test="roleCode != null">roleCode = #{roleCode},</if>
			<if test="roleLevel != null">roleLevel = #{roleLevel},</if>
		</trim>
		<where>id = #{id}</where>
	</update>
	<!--查找对象-->
	<select id="findById" resultMap="BaseResultMap" parameterType="String" >
		select 
		<include refid="Base_Column_List" />
		from 
		<include refid="tableasname"/>
		where jr.id = #{id}
	</select>
	<!--查找对象-->
	<select id="findByCode" resultMap="BaseResultMap" parameterType="String" >
		select 
		<include refid="Base_Column_List" />
		from 
		<include refid="tableasname"/>
		where jr.roleCode = #{roleCode}
	</select>
	<!-- 查询子节点 -->
	<select id="findChildren" resultMap="BaseResultMap" parameterType="string">
		select
		<include refid="Base_Column_List" />
		from 
		<include refid="tableasname" /> 
		where rolePid=#{rolePid}
	</select>
	<!-- 查询不在某机构的用户 -->
	<select id="selectNoallotUser" parameterType="PagerInfo" resultType="JSUser">
	select u.id,u.realName  
      from j_s_user u 
      where u.id not in(select ur.userId from j_s_user_role ur where ur.roleId=#{queryParams.id}) and u.userLevel=1						
	</select>
	<!--查找用户拥有的角色-->
	<select id="findRoleByUser" resultType="JSRole" parameterType="String" >
		select 
		<include refid="Base_Column_List" />
		from 
		<include refid="tableasname" /> 
		left join j_s_user_role ur
		on jr.id=ur.roleId
		where ur.userId=#{id}
	</select>
	<!-- 批量分配用户给机构 -->
	<insert id="batchAllotUser" parameterType="list">
		insert into
		j_s_user_role
		(roleId,userId)
		<foreach collection="list" item="item" index="index"
			separator="union all">
			select #{item.roleId},#{item.userId} from dual
		</foreach>
	</insert>
	<!--批量删除-->
	<delete id="deleteAll">
		delete from 
		<include refid="tablename" />
		where id in
		<foreach item="item" collection="array" open="(" separator="," close=")">
			#{item}
		</foreach>
	</delete>
	<!--批量删除-->
	<delete id="deleteAllotUser" parameterType="map">
		delete from 
		j_s_user_role
		where userId in
		<foreach item="item" collection="ids" open="(" separator="," close=")">
			#{item}
		</foreach>
		and roleId=#{id}
	</delete>
	<!--删除用户的角色-->
	<delete id="deleteUserRole" parameterType="String">
		delete from 
		j_s_user_role
		where userId=#{userId}
	</delete>
	<!--单对象删除-->
	<delete id="delete" parameterType="String">
		delete from 
		<include refid="tablename" />
		where id=#{id}
	</delete>
	<!--生成排序号-->
	<select id="createCode" resultType="String" parameterType="string">
		SELECT MAX(jr.roleCode)+1 from 
        <include refid="tableasname" /> 
         where jr.rolePid=#{rolePid}
	</select>
	<!-- 查询,参数查询,Map -->
	<select id="selectByMap" parameterType="Map" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from
		<include refid="tablename" />
		<include refid="where" />
		<include refid="andOther" />
	</select>
	<!-- 获取用户列表(分页)-->
	<select id="pagerList" parameterType="PagerInfo" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from
		<include refid="tableasname" />
		<include refid="page_where" />
	</select>
</mapper>
